/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo-kl-enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
            layers = <0>;
        };

        combo-jk-esc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
      &kp TAB  &kp Q  &kp W     &kp E      &kp R                 &kp T               &kp Y            &kp U      &kp I    &kp O                &kp P         &kp BSPC
&mt LCTRL ESC  &kp A  &kp S     &kp D      &kp F                 &kp G               &kp H            &kp J      &kp K    &kp L  &mt RCTRL SEMICOLON          &kp SQT
    &kp LSHFT  &kp Z  &kp X     &kp C      &kp V                 &kp B               &kp N            &kp M  &kp COMMA  &kp DOT             &kp FSLH  &mt RSHFT ENTER
                             &kp LALT  &lt 1 TAB  &mt LEFT_SHIFT SPACE    &mt RSHIFT SPACE  &lt 2 BACKSPACE   &kp RGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp LG(Q)  &kp LG(W)  &kp LG(E)  &kp LG(R)         &kp LG(T)              &trans             &kp N7        &kp N8        &kp N9           &trans  &kp BSPC
&kp LCTRL  &kp LG(A)  &kp LG(S)  &kp LG(D)  &kp LG(F)         &kp LG(G)              &trans       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6           &trans    &trans
&kp LSHFT  &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)         &kp LG(B)     &kp KP_NUMBER_0       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_NUMBER_0    &trans
                                  &kp LALT     &trans  &mt LSHIFT SPACE    &mt RSHIFT SPACE  &kp LG(BACKSPACE)      &kp RGUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB      &kp GRAVE        &kp LEFT_BRACE        &kp RIGHT_BRACE         &kp EQUAL           &trans           &kp CARET  &kp AMPS  &kp KP_MULTIPLY   &kp LPAR  &kp BACKSLASH   &kp BSPC
&kp LCTRL  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN           &trans            &kp LEFT  &kp DOWN           &kp UP  &kp RIGHT        &kp SQT  &kp GRAVE
&kp LSHFT         &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET         &kp MINUS           &trans           &kp UNDER  &kp PLUS         &kp LBRC   &kp RBRC       &kp PIPE  &kp TILDE
                                                             &kp LALT       &kp RG(TAB)  &mt LSHFT SPACE    &mt RSHIFT SPACE    &trans         &kp RGUI
            >;
        };
    };
};
